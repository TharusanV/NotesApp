{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\components\\\\NoteCreator\\\\NoteCreatorEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Editor } from \"ckeditor5-custom-build/build/ckeditor\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\n//With props being an object we know props has one key on it therefore we can destructure it through naming the key creating a local variable \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteCreatorEditor = _ref => {\n  _s();\n  let {\n    prop_GetActiveNote,\n    prop_OnUpdateNote\n  } = _ref;\n  //Getters and Setters that are a part of the 'preview note' button to see how the note will be viewed\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [wordCount, setWordCount] = useState(0); //Getter and setter for the word count\n  const noteTopics = [{\n    name: \"Maths\"\n  }, {\n    name: \"Science\"\n  }, {\n    name: \"English\"\n  }, {\n    name: \"CS\"\n  }, {\n    name: \"Business\"\n  }, {\n    name: \"Pharmacy\"\n  }, {\n    name: \"Law\"\n  }, {\n    name: \"Economics\"\n  }, {\n    name: \"Accounting\"\n  }, {\n    name: \"Psychology\"\n  }, {\n    name: \"Medicine\"\n  }, {\n    name: \"Politics\"\n  }];\n  const onEditField = (key, value) => {\n    prop_OnUpdateNote({\n      ...prop_GetActiveNote,\n      id: prop_GetActiveNote.noteIDCustom,\n      [key]: value,\n      lastModified: Date.now()\n    });\n  };\n\n  //If there is no active note selected then this will be used as a placeholder\n  if (!prop_GetActiveNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"No selected note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n\n  //Used to set the topic of the note\n  const settingTopic = () => {\n    var select = document.getElementById(\"topicList\");\n    var value = select.options[select.selectedIndex].value;\n    onEditField(\"topic\", value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteCreator-hero-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"noteCreator-main-note-editor-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            marginBottom: \"10px\",\n            padding: \"0px 5px\"\n          },\n          id: \"note-title\",\n          type: \"text\",\n          onChange: event => onEditField(\"title\", event.target.value),\n          autoFocus: true,\n          value: prop_GetActiveNote.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"topicList\",\n          onChange: () => settingTopic(),\n          style: {\n            marginBottom: \"10px\",\n            marginRight: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"General\",\n            children: \"General\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), noteTopics.map(topics => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: topics.name,\n            children: topics.name\n          }, topics.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginBottom: \"10px\",\n            marginRight: \"10px\",\n            display: \"inline-block\"\n          },\n          className: \"current-topic\",\n          children: [\"Current Topic:\", prop_GetActiveNote.topic]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            marginBottom: \"10px\",\n            display: \"inline-block\",\n            marginRight: \"10px\"\n          },\n          children: [\"Word Count: \", wordCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n          editor: Editor,\n          config: {\n            toolbar: [\"heading\", \"|\", \"undo\", \"redo\", \"fontFamily\", \"fontSize\", \"bold\", \"italic\", \"link\", \"bulletedList\", \"numberedList\", \"|\", \"outdent\", \"indent\", \"|\", \"blockQuote\", \"insertTable\", \"mediaEmbed\", \"underline\", \"todoList\", \"strikethrough\", \"specialCharacters\", \"pageBreak\", \"highlight\", \"horizontalLine\", \"fontBackgroundColor\", \"fontColor\", \"code\", \"codeBlock\", \"alignment\"]\n          },\n          data: prop_GetActiveNote.body,\n          id: prop_GetActiveNote.noteIDCustom,\n          onChange: (event, editor) => {\n            onEditField(\"body\", editor.getData());\n            setWordCount(editor.getData().replace(/(<([^>]+)>)/gi, \"\").trim().split(/\\s+/).length);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(NoteCreatorEditor, \"DaDwm1XJWuFzUjKLhKEvGBhdj0k=\");\n_c = NoteCreatorEditor;\nexport default NoteCreatorEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteCreatorEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","CKEditor","Modal","Box","Typography","NoteCreatorEditor","prop_GetActiveNote","prop_OnUpdateNote","open","setOpen","handleOpen","handleClose","wordCount","setWordCount","noteTopics","name","onEditField","key","value","id","noteIDCustom","lastModified","Date","now","settingTopic","select","document","getElementById","options","selectedIndex","marginBottom","padding","event","target","title","marginRight","map","topics","display","topic","toolbar","body","editor","getData","replace","trim","split","length"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/components/NoteCreator/NoteCreatorEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Editor } from \"ckeditor5-custom-build/build/ckeditor\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\n//With props being an object we know props has one key on it therefore we can destructure it through naming the key creating a local variable \r\nconst NoteCreatorEditor = ({prop_GetActiveNote, prop_OnUpdateNote}) => {\r\n\r\n  //Getters and Setters that are a part of the 'preview note' button to see how the note will be viewed\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [wordCount, setWordCount] = useState(0); //Getter and setter for the word count\r\n  const noteTopics = [{name: \"Maths\"}, {name: \"Science\"}, {name: \"English\"}, {name: \"CS\"}, {name: \"Business\"}, {name: \"Pharmacy\"}, {name: \"Law\"}, {name: \"Economics\"}, \r\n  {name: \"Accounting\"}, {name: \"Psychology\"}, {name: \"Medicine\"}, {name: \"Politics\"}]\r\n\r\n  const onEditField = (key, value) => {\r\n    prop_OnUpdateNote({\r\n      ...prop_GetActiveNote,\r\n      id: prop_GetActiveNote.noteIDCustom,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    });\r\n  };\r\n\r\n  //If there is no active note selected then this will be used as a placeholder\r\n  if (!prop_GetActiveNote)\r\n  return <div className=\"no-active-note\">No selected note</div>;\r\n\r\n  //Used to set the topic of the note\r\n  const settingTopic = () => {\r\n    var select = document.getElementById(\"topicList\");\r\n    var value = select.options[select.selectedIndex].value;\r\n    onEditField(\"topic\", value);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"noteCreator-hero-container\">\r\n        <div className=\"noteCreator-main-note-editor-container\">\r\n          <input\r\n            style={{ marginBottom: \"10px\", padding: \"0px 5px\" }}\r\n            id=\"note-title\"\r\n            type=\"text\"\r\n            onChange={(event) => onEditField(\"title\", event.target.value)}\r\n            autoFocus\r\n            value={prop_GetActiveNote.title}\r\n          />\r\n\r\n          <select\r\n            id=\"topicList\"\r\n            onChange={() => settingTopic()}\r\n            style={{ marginBottom: \"10px\", marginRight: \"10px\", }}\r\n          >\r\n            <option value={\"General\"}>General</option>\r\n            {noteTopics.map((topics) => (\r\n              <option value={topics.name} key={topics.name}>\r\n                {topics.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <label\r\n            style={{ marginBottom: \"10px\", marginRight: \"10px\", display: \"inline-block\" }}\r\n            className=\"current-topic\"\r\n          >\r\n            Current Topic:{prop_GetActiveNote.topic}\r\n          </label>\r\n\r\n          <label\r\n            style={{\r\n              marginBottom: \"10px\",\r\n              display: \"inline-block\",\r\n              marginRight: \"10px\",\r\n            }}\r\n          >\r\n            Word Count: {wordCount}{\" \"}\r\n          </label>\r\n\r\n          <CKEditor\r\n            editor={Editor}\r\n            config={{\r\n              toolbar: [\r\n                \"heading\",\r\n                \"|\",\r\n                \"undo\",\r\n                \"redo\",\r\n                \"fontFamily\",\r\n                \"fontSize\",\r\n                \"bold\",\r\n                \"italic\",\r\n                \"link\",\r\n                \"bulletedList\",\r\n                \"numberedList\",\r\n                \"|\",\r\n                \"outdent\",\r\n                \"indent\",\r\n                \"|\",\r\n                \"blockQuote\",\r\n                \"insertTable\",\r\n                \"mediaEmbed\",\r\n                \"underline\",\r\n                \"todoList\",\r\n                \"strikethrough\",\r\n                \"specialCharacters\",\r\n                \"pageBreak\",\r\n                \"highlight\",\r\n                \"horizontalLine\",\r\n                \"fontBackgroundColor\",\r\n                \"fontColor\",\r\n                \"code\",\r\n                \"codeBlock\",\r\n                \"alignment\",\r\n              ],\r\n            }}\r\n            data={prop_GetActiveNote.body}\r\n            id={prop_GetActiveNote.noteIDCustom}\r\n            onChange={(event, editor) => {\r\n              onEditField(\"body\", editor.getData());\r\n              setWordCount(\r\n                editor\r\n                  .getData()\r\n                  .replace(/(<([^>]+)>)/gi, \"\")\r\n                  .trim()\r\n                  .split(/\\s+/).length\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoteCreatorEditor"],"mappings":"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"},"metadata":{},"sourceType":"module"}