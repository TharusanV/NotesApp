{"ast":null,"code":"var _jsxFileName = \"E:\\\\0TUser18\\\\Downloads\\\\Projects\\\\Notes App\\\\client\\\\src\\\\components\\\\NoteCreator\\\\NoteCreatorEditor.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Editor } from \"ckeditor5-custom-build/build/ckeditor\";\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport Modal from \"@mui/material/Modal\";\nimport Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\n\n//With props being an object we know props has one key on it therefore we can destructure it through naming the key creating a local variable \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteCreatorEditor = _ref => {\n  _s();\n  let {\n    prop_GetActiveNote,\n    prop_OnUpdateNote\n  } = _ref;\n  //Getters and Setters that are a part of the 'preview note' button to see how the note will be viewed\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [wordCount, setWordCount] = useState(0); //Getter and setter for the word count\n  const noteTopics = [{\n    name: \"Maths\"\n  }, {\n    name: \"Science\"\n  }, {\n    name: \"English\"\n  }, {\n    name: \"CS\"\n  }, {\n    name: \"Business\"\n  }, {\n    name: \"Pharmacy\"\n  }, {\n    name: \"Law\"\n  }, {\n    name: \"Economics\"\n  }, {\n    name: \"Accounting\"\n  }, {\n    name: \"Psychology\"\n  }, {\n    name: \"Medicine\"\n  }, {\n    name: \"Politics\"\n  }];\n  const onEditField = (key, value) => {\n    prop_OnUpdateNote({\n      ...prop_GetActiveNote,\n      id: prop_GetActiveNote.noteIDCustom,\n      [key]: value,\n      lastModified: Date.now()\n    });\n  };\n\n  //If there is no active note selected then this will be used as a placeholder\n  if (!prop_GetActiveNote) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"no-active-note\",\n    children: \"No selected note\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n\n  //Used to set the topic of the note\n  const settingTopic = () => {\n    var select = document.getElementById(\"topicList\");\n    var value = select.options[select.selectedIndex].value;\n    onEditField(\"topic\", value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"noteCreator-hero-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"noteCreator-main-note-editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"note-title\",\n        type: \"text\",\n        onChange: event => onEditField(\"title\", event.target.value),\n        autoFocus: true,\n        value: prop_GetActiveNote.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"topicList\",\n        onChange: () => settingTopic(),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"General\",\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), noteTopics.map(topics => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topics.name,\n          children: topics.name\n        }, topics.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Current Topic: \", prop_GetActiveNote.topic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: Editor,\n        data: prop_GetActiveNote.body,\n        id: prop_GetActiveNote.id,\n        onChange: (event, editor) => onEditField(\"body\", editor.getData())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteCreatorEditor, \"DaDwm1XJWuFzUjKLhKEvGBhdj0k=\");\n_c = NoteCreatorEditor;\nexport default NoteCreatorEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteCreatorEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","CKEditor","Modal","Box","Typography","NoteCreatorEditor","prop_GetActiveNote","prop_OnUpdateNote","open","setOpen","handleOpen","handleClose","wordCount","setWordCount","noteTopics","name","onEditField","key","value","id","noteIDCustom","lastModified","Date","now","settingTopic","select","document","getElementById","options","selectedIndex","event","target","title","map","topics","topic","body","editor","getData"],"sources":["E:/0TUser18/Downloads/Projects/Notes App/client/src/components/NoteCreator/NoteCreatorEditor.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Editor } from \"ckeditor5-custom-build/build/ckeditor\";\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\n\r\n//With props being an object we know props has one key on it therefore we can destructure it through naming the key creating a local variable \r\nconst NoteCreatorEditor = ({prop_GetActiveNote, prop_OnUpdateNote}) => {\r\n\r\n  //Getters and Setters that are a part of the 'preview note' button to see how the note will be viewed\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [wordCount, setWordCount] = useState(0); //Getter and setter for the word count\r\n  const noteTopics = [{name: \"Maths\"}, {name: \"Science\"}, {name: \"English\"}, {name: \"CS\"}, {name: \"Business\"}, {name: \"Pharmacy\"}, {name: \"Law\"}, {name: \"Economics\"}, \r\n  {name: \"Accounting\"}, {name: \"Psychology\"}, {name: \"Medicine\"}, {name: \"Politics\"}]\r\n\r\n  const onEditField = (key, value) => {\r\n    prop_OnUpdateNote({\r\n      ...prop_GetActiveNote,\r\n      id: prop_GetActiveNote.noteIDCustom,\r\n      [key]: value,\r\n      lastModified: Date.now(),\r\n    });\r\n  };\r\n\r\n  //If there is no active note selected then this will be used as a placeholder\r\n  if (!prop_GetActiveNote)\r\n  return <div className=\"no-active-note\">No selected note</div>;\r\n\r\n  //Used to set the topic of the note\r\n  const settingTopic = () => {\r\n    var select = document.getElementById(\"topicList\");\r\n    var value = select.options[select.selectedIndex].value;\r\n    onEditField(\"topic\", value);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='noteCreator-hero-container'>\r\n      <div className='noteCreator-main-note-editor-container'>     \r\n        <input \r\n          id='note-title' \r\n          type='text' \r\n          onChange={(event) => onEditField(\"title\", event.target.value)} \r\n          autoFocus \r\n          value={prop_GetActiveNote.title} \r\n        />\r\n\r\n        <select id='topicList' onChange={() => settingTopic()}>\r\n          <option value={\"General\"}>General</option>\r\n          {noteTopics.map((topics) => (\r\n            <option value={topics.name} key={topics.name}>\r\n              {topics.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        <label>Current Topic: {prop_GetActiveNote.topic}</label>\r\n        \r\n        <CKEditor\r\n          editor={Editor}\r\n          data={prop_GetActiveNote.body}\r\n          id={prop_GetActiveNote.id}\r\n          onChange={(event, editor) => onEditField(\"body\", editor.getData())} \r\n        />        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NoteCreatorEditor"],"mappings":"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"},"metadata":{},"sourceType":"module"}